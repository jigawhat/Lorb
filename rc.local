#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

#/usr/bin/sudo -u ubuntu nvm /usr/bin/install 10.13.0
cd /home/ubuntu/opggapi/
/usr/bin/sudo -u ubuntu /usr/bin/git pull
/usr/bin/sudo -u ubuntu /home/ubuntu/.nvm/versions/node/v10.13.0/bin/forever start server_cluster.js
cd /home/ubuntu/LoLOrb/
/usr/bin/sudo -u ubuntu /usr/bin/git pull
/usr/bin/sudo /usr/sbin/rabbitmqctl add_user alfy doctorStationTurbo || true
/usr/bin/sudo /usr/sbin/rabbitmqctl set_permissions -p / alfy ".*" ".*" ".*" || true
/usr/bin/sudo /usr/sbin/rabbitmqctl set_user_tags alfy administrator || true
/usr/bin/sudo -u ubuntu /usr/bin/python3 spawn_workers.py

cd /home/ubuntu/Lorb/
/usr/bin/sudo -u ubuntu /usr/bin/git pull
/usr/bin/sudo rm -rdf /home/ubuntu/staging
/usr/bin/sudo -u ubuntu cp -rd /home/ubuntu/Lorb/site/public /home/ubuntu/staging
cd /home/ubuntu/LoLOrb/
/usr/bin/sudo -u ubuntu /usr/bin/python3 kr_modify.py
/usr/bin/sudo rm -rdf /www/public
/usr/bin/sudo cp -rd /home/ubuntu/staging /www/public

# /usr/bin/sudo cp /home/ubuntu/Lorb/server.conf /etc/nginx/conf.d/server.conf # disabled because kr server has it's own config
# /usr/bin/sudo nginx -s reload

# wait for RabbitMQ queues to be declared by workers
sleep 3m
cd /home/ubuntu/Lorb/
/usr/bin/sudo -u ubuntu /home/ubuntu/.nvm/versions/node/v10.13.0/bin/node create_logs_dir.js
/usr/bin/sudo -u ubuntu /home/ubuntu/.nvm/versions/node/v10.13.0/bin/forever start -o /home/ubuntu/Lorb/logs/server.log -e /home/ubuntu/Lorb/logs/errors.log server.js

exit 0
